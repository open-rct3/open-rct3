@import url('https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&display=swap');

@import "./animations";
@import "./colors";
@import "./mixins";
@import "./variables";

$hudHeight: 36px;
$hudBorderRadius: 12px;
$drawerGripSize: 32px;

body {
  overflow: hidden;
}

header.nav {
  width: $headerCollapsedWidth;
  background-color: transparent;
  border-bottom-right-radius: 4px;
  transition: width 300ms ease-out;
  z-index: $onTop + 10;

  .logo button.nub {
    $spacing: 4px;

    position: relative;
    left: -$spacing;
    margin: 0;
    padding-block: $spacing;
    padding-inline: $spacing;
    background: transparent;
    border: none;
    transition: left 300ms ease-out;

    &:hover, &:focus, &:active {
      color: var(--link);
      transition-duration: 250ms;
    }
  }

  a.shown-on-focus {
    position: absolute;
    left: $headerCollapsedWidth;
  }

  nav {
    display: none;
  }

  &.shown, &:focus-within {
    width: 100vw;
    border-bottom-right-radius: 4px;

    .logo button.nub {
      left: 0;
    }

    nav.shown {
      display: inherit;
      opacity: 1;
      transition: opacity 250ms ease;
      // transition-delay: 350ms;

      @starting-style {
        opacity: 0;
      }
    }
  }
}

main {
  $padding: 4px;

  header {
    font-size: 1rem;
    position: relative;
    top: -($headerHeight + $padding);
    display: flex;
    align-items: baseline;
    gap: calc(#{$padding} + (#{$padding} / 2));
    margin: 0 auto;
    padding-block: $padding 0;
    padding-inline: $padding;
    width: fit-content;
    max-width: calc(100vw - #{$headerCollapsedWidth * 2});
    min-height: $hudHeight - $padding;
    filter: drop-shadow(2px 2px 1px rgba(0, 0, 0, 0.75));
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    @include on-top();

    &:before {
      content: "";
      position: absolute;
      top: -2px;
      left: 0;
      right: 0;
      height: 100%;
      background-color: rgb(73, 153, 223);
      border-bottom-left-radius: $hudBorderRadius;
      border-bottom-right-radius: $hudBorderRadius;
      clip-path: path('M 0 0 L 1024 0 L 1024 #{unitless($hudHeight)} L 300 #{unitless($hudHeight)} C 300,4 270,4 270,#{unitless($hudHeight)} L 0 #{unitless($hudHeight)}');
      z-index: $onTop - 1;
    }

    & > * {
      z-index: $onTop + 1;
    }

    .indicator, .radio-group {
      line-height: 1;
      height: fit-content;
    }
    .indicator:not(button) {
      cursor: default;
    }

    @media (max-width: 970px) {
      meter.approval, .indicator.approval:not(.rating) {
        display: none;
      }
    }

    button.icon-button {
      padding: 0;
      height: fit-content;
      background: none;
      border: none;
      border-radius: 8px;
    }

    button.icon-button.indicator {
      cursor: pointer;

      &:disabled {
        cursor: default;
      }
      &[role=switch][aria-checked=false], &:disabled {
        .icon {
          opacity: 75%;
          filter: grayscale(100%);
        }
      }
    }
  }

  .drawer-grip-spacer, #drawerGrip {
    width: $drawerGripSize;
  }

  input[type="radio"] {
    appearance: none;
    margin: 0;
  }

  .icon:not(.fas), button.icon-button {
    font-family: "Noto Color Emoji";
    font-size: 20px;
    text-shadow: rgba(0, 0, 0, 0.5) 1px 1px 2px;
  }

  aside {
    position: fixed;
    display: flex;
    flex: 1;
    flex-direction: column;
    justify-content: center;
    margin-inline-start: 12px;
    gap: 8px;
    width: min-content;
    @include on-top();

    button.icon-button {
      --border-width: 2px;

      display: flex;
      justify-content: center;
      align-items: center;
      width: 34px;
      height: 34px;
      background: linear-gradient(rgb(55, 114, 166),rgb(73, 153, 223));
      border: solid var(--border-width) rgb(35, 117, 159);
      border-radius: 30px;
      outline-offset: calc(var(--border-width) * 2);
      box-shadow: inset rgb(73, 153, 223) 0 0 3px 3px, rgba(0, 0, 0, 0.5) 1px 1px 2px 0px;
      transition: transform ease 0.2s;

      &:hover {
        transform: scale(115%);
      }
    }
  }
}

#notificationDrawer {
  position: absolute;
  top: 0;
  padding-block-start: 0;
  padding-inline: 4px;
  width: min-content;
  min-height: $hudHeight - 4px * 2 - 2px;
  background-color: white;
  border-bottom-left-radius: $hudBorderRadius + 4px;
  border-bottom-right-radius: $hudBorderRadius + 4px;
  transition: border-radius 200ms ease-out, min-height 450ms ease-out, padding-block-start 450ms ease-out;
  transition-delay: 350ms, 0ms, 0ms;
  box-shadow: rgba(0, 0, 0, 0.75) 0 1px 2px;

  &.shown {
    padding-block-start: $hudHeight - 4px;
    min-height: 150px;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    transition-delay: 0ms, 0ms, 0ms;
  }

  & > * {
    z-index: $onTop;
  }
}

#drawerGrip {
  position: absolute;
  bottom: 0;
  left: calc(50% - #{$drawerGripSize} / 2);
  margin-block-end: -6px;
  padding-inline: 4px;
  padding-block: 0;
  border: none;
  background-color: transparent;

  &:hover {
    color: inherit;
  }

  .icon {
    font-size: 11px;
  }
}

#notifications {
  position: absolute;
  top: unset;
  right: 0;
  bottom: 0;
}
.alert {
  margin-block: 0 8px;
  transform-origin: bottom center;
}

.panel {
  display: none;

  &.shown {
    display: inherit;
  }
}

canvas#game {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100vh;
  z-index: 1;
}
