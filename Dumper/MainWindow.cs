// This file has been autogenerated from a class added in the UI designer.

using System;
using System.ComponentModel;
using System.Reactive.Linq;
using ObjCRuntime;
using Foundation;
using AppKit;
using Dumper.Models;

namespace Dumper;

public partial class MainWindow : NSWindow {
  public MainWindow(NativeHandle handle) : base(handle) {
    Delegate = new MainWindowDelegate();
  }

  public override bool CanBecomeMainWindow => true;
  public override bool CanBecomeVisibleWithoutLogin => false;

  public override void MakeMainWindow() {
    base.MakeMainWindow();
    MakeKeyAndOrderFront(this);
  }

  public override void BecomeMainWindow() {
    AppDelegate.Instance.MainWindow = this;
    base.BecomeMainWindow();
  }
}

internal class MainWindowDelegate : NSWindowDelegate {
  public readonly Project Project = new();

  public event EventHandler? Closing;
  public readonly IObservable<string> ProjectRenamed;

  public MainWindowDelegate() {
    ProjectRenamed = Observable.FromEventPattern<EventHandler<string>, string>(
        h => Project.Renamed += h,
        h => Project.Renamed -= h
      )
      .Select(ev => ev.EventArgs);
  }

  public override void WillClose(NSNotification notification) {
    Closing?.Invoke(this, EventArgs.Empty);
  }

  public override void DidBecomeMain(NSNotification notification) {
    throw new NotImplementedException();
  }

  public override void DidResignMain(NSNotification notification) {
    throw new NotImplementedException();
  }
}
